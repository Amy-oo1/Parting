#ifdef PARTING_MODULE_BUILD
#include "Core/ModuleBuild.h"

PARTING_GLOBAL_MODULE
#include "Core/Utility/Include/UtilityMacros.h"

PARTING_SUBMODULE(D3D12RHI, Format)

PARTING_IMPORT DirectX12Wrapper;

PARTING_IMPORT Platform;
PARTING_IMPORT Utility;
PARTING_IMPORT Algorithm;
PARTING_IMPORT Container;

PARTING_IMPORT RHI;

#else
#pragma once

#include "Core/ModuleBuild.h"

#include "Core/Utility/Include/UtilityMacros.h"
//Global
#include "D3D12RHI/Module/DirectX12Wrapper.h"

#include "Core/Platform/Module/Platform.h"
#include "Core/Utility/Module/Utility.h"
#include "Core/Algorithm/Module/Algorithm.h"
#include "Core/Container/Module/Container.h"

#include "RHI/Module/RHI.h"

#endif // PARTING_MODULE_BUILD

namespace RHI::D3D12{
	PARTING_EXPORT struct DXGIFormatMapping final {
		RHIFormat AbstractFormat;
		DXGI_FORMAT ResourceFormat;
		DXGI_FORMAT SRVFormat;
		DXGI_FORMAT RTVFormat;
	};

	/*using enum RHIFormat;*/
	//NOTE begin use header ,using enum in global is fliting....

	//TODO  uesed? must on order to set... if you want to add... 
	PARTING_EXPORT constexpr  /*const*/  Array<DXGIFormatMapping, Tounderlying(RHIFormat::COUNT)> g_DXGIFormatMappings{
		DXGIFormatMapping { RHIFormat::UNKNOWN,					DXGI_FORMAT_UNKNOWN,				DXGI_FORMAT_UNKNOWN,					DXGI_FORMAT_UNKNOWN					},

		DXGIFormatMapping { RHIFormat::R8_UINT,					DXGI_FORMAT_R8_TYPELESS,			DXGI_FORMAT_R8_UINT,					DXGI_FORMAT_R8_UINT					},
		DXGIFormatMapping { RHIFormat::R8_SINT,					DXGI_FORMAT_R8_TYPELESS,			DXGI_FORMAT_R8_SINT,					DXGI_FORMAT_R8_SINT					},
		DXGIFormatMapping { RHIFormat::R8_UNORM,				DXGI_FORMAT_R8_TYPELESS,			DXGI_FORMAT_R8_UNORM,					DXGI_FORMAT_R8_UNORM				},
		DXGIFormatMapping { RHIFormat::R8_SNORM,				DXGI_FORMAT_R8_TYPELESS,			DXGI_FORMAT_R8_SNORM,					DXGI_FORMAT_R8_SNORM				},
		DXGIFormatMapping { RHIFormat::RG8_UINT,				DXGI_FORMAT_R8G8_TYPELESS,			DXGI_FORMAT_R8G8_UINT,					DXGI_FORMAT_R8G8_UINT				},
		DXGIFormatMapping { RHIFormat::RG8_SINT,				DXGI_FORMAT_R8G8_TYPELESS,			DXGI_FORMAT_R8G8_SINT,					DXGI_FORMAT_R8G8_SINT				},
		DXGIFormatMapping { RHIFormat::RG8_UNORM,				DXGI_FORMAT_R8G8_TYPELESS,			DXGI_FORMAT_R8G8_UNORM,					DXGI_FORMAT_R8G8_UNORM				},
		DXGIFormatMapping { RHIFormat::RG8_SNORM,				DXGI_FORMAT_R8G8_TYPELESS,			DXGI_FORMAT_R8G8_SNORM,					DXGI_FORMAT_R8G8_SNORM				},
		DXGIFormatMapping { RHIFormat::R16_UINT,				DXGI_FORMAT_R16_TYPELESS,			DXGI_FORMAT_R16_UINT,					DXGI_FORMAT_R16_UINT				},
		DXGIFormatMapping { RHIFormat::R16_SINT,				DXGI_FORMAT_R16_TYPELESS,			DXGI_FORMAT_R16_SINT,					DXGI_FORMAT_R16_SINT				},
		DXGIFormatMapping { RHIFormat::R16_UNORM,				DXGI_FORMAT_R16_TYPELESS,			DXGI_FORMAT_R16_UNORM,					DXGI_FORMAT_R16_UNORM				},
		DXGIFormatMapping { RHIFormat::R16_SNORM,				DXGI_FORMAT_R16_TYPELESS,			DXGI_FORMAT_R16_SNORM,					DXGI_FORMAT_R16_SNORM				},
		DXGIFormatMapping { RHIFormat::R16_FLOAT,				DXGI_FORMAT_R16_TYPELESS,			DXGI_FORMAT_R16_FLOAT,					DXGI_FORMAT_R16_FLOAT				},
		DXGIFormatMapping { RHIFormat::BGRA4_UNORM,				DXGI_FORMAT_B4G4R4A4_UNORM,			DXGI_FORMAT_B4G4R4A4_UNORM,				DXGI_FORMAT_B4G4R4A4_UNORM			},
		DXGIFormatMapping { RHIFormat::B5G6R5_UNORM,			DXGI_FORMAT_B5G6R5_UNORM,			DXGI_FORMAT_B5G6R5_UNORM,				DXGI_FORMAT_B5G6R5_UNORM			},
		DXGIFormatMapping { RHIFormat::B5G5R5A1_UNORM,			DXGI_FORMAT_B5G5R5A1_UNORM,			DXGI_FORMAT_B5G5R5A1_UNORM,				DXGI_FORMAT_B5G5R5A1_UNORM			},
		DXGIFormatMapping { RHIFormat::RGBA8_UINT,				DXGI_FORMAT_R8G8B8A8_TYPELESS,		DXGI_FORMAT_R8G8B8A8_UINT,				DXGI_FORMAT_R8G8B8A8_UINT			},
		DXGIFormatMapping { RHIFormat::RGBA8_SINT,				DXGI_FORMAT_R8G8B8A8_TYPELESS,		DXGI_FORMAT_R8G8B8A8_SINT,				DXGI_FORMAT_R8G8B8A8_SINT			},
		DXGIFormatMapping { RHIFormat::RGBA8_UNORM,				DXGI_FORMAT_R8G8B8A8_TYPELESS,		DXGI_FORMAT_R8G8B8A8_UNORM,				DXGI_FORMAT_R8G8B8A8_UNORM			},
		DXGIFormatMapping { RHIFormat::RGBA8_SNORM,				DXGI_FORMAT_R8G8B8A8_TYPELESS,		DXGI_FORMAT_R8G8B8A8_SNORM,				DXGI_FORMAT_R8G8B8A8_SNORM			},
		DXGIFormatMapping { RHIFormat::BGRA8_UNORM,				DXGI_FORMAT_B8G8R8A8_TYPELESS,		DXGI_FORMAT_B8G8R8A8_UNORM,				DXGI_FORMAT_B8G8R8A8_UNORM			},
		DXGIFormatMapping { RHIFormat::SRGBA8_UNORM,			DXGI_FORMAT_R8G8B8A8_TYPELESS,		DXGI_FORMAT_R8G8B8A8_UNORM_SRGB,		DXGI_FORMAT_R8G8B8A8_UNORM_SRGB		},
		DXGIFormatMapping { RHIFormat::SBGRA8_UNORM,			DXGI_FORMAT_B8G8R8A8_TYPELESS,		DXGI_FORMAT_B8G8R8A8_UNORM_SRGB,		DXGI_FORMAT_B8G8R8A8_UNORM_SRGB		},
		DXGIFormatMapping { RHIFormat::R10G10B10A2_UNORM,		DXGI_FORMAT_R10G10B10A2_TYPELESS,   DXGI_FORMAT_R10G10B10A2_UNORM,			DXGI_FORMAT_R10G10B10A2_UNORM		},
		DXGIFormatMapping { RHIFormat::R11G11B10_FLOAT,			DXGI_FORMAT_R11G11B10_FLOAT,		DXGI_FORMAT_R11G11B10_FLOAT,			DXGI_FORMAT_R11G11B10_FLOAT			},
		DXGIFormatMapping { RHIFormat::RG16_UINT,				DXGI_FORMAT_R16G16_TYPELESS,		DXGI_FORMAT_R16G16_UINT,				DXGI_FORMAT_R16G16_UINT				},
		DXGIFormatMapping { RHIFormat::RG16_SINT,				DXGI_FORMAT_R16G16_TYPELESS,		DXGI_FORMAT_R16G16_SINT,				DXGI_FORMAT_R16G16_SINT				},
		DXGIFormatMapping { RHIFormat::RG16_UNORM,				DXGI_FORMAT_R16G16_TYPELESS,		DXGI_FORMAT_R16G16_UNORM,				DXGI_FORMAT_R16G16_UNORM			},
		DXGIFormatMapping { RHIFormat::RG16_SNORM,				DXGI_FORMAT_R16G16_TYPELESS,		DXGI_FORMAT_R16G16_SNORM,				DXGI_FORMAT_R16G16_SNORM			},
		DXGIFormatMapping { RHIFormat::RG16_FLOAT,				DXGI_FORMAT_R16G16_TYPELESS,		DXGI_FORMAT_R16G16_FLOAT,				DXGI_FORMAT_R16G16_FLOAT			},
		DXGIFormatMapping { RHIFormat::R32_UINT,				DXGI_FORMAT_R32_TYPELESS,			DXGI_FORMAT_R32_UINT,					DXGI_FORMAT_R32_UINT				},
		DXGIFormatMapping { RHIFormat::R32_SINT,				DXGI_FORMAT_R32_TYPELESS,			DXGI_FORMAT_R32_SINT,					DXGI_FORMAT_R32_SINT				},
		DXGIFormatMapping { RHIFormat::R32_FLOAT,				DXGI_FORMAT_R32_TYPELESS,			DXGI_FORMAT_R32_FLOAT,					DXGI_FORMAT_R32_FLOAT				},
		DXGIFormatMapping { RHIFormat::RGBA16_UINT,				DXGI_FORMAT_R16G16B16A16_TYPELESS,  DXGI_FORMAT_R16G16B16A16_UINT,			DXGI_FORMAT_R16G16B16A16_UINT		},
		DXGIFormatMapping { RHIFormat::RGBA16_SINT,				DXGI_FORMAT_R16G16B16A16_TYPELESS,  DXGI_FORMAT_R16G16B16A16_SINT,			DXGI_FORMAT_R16G16B16A16_SINT		},
		DXGIFormatMapping { RHIFormat::RGBA16_FLOAT,			DXGI_FORMAT_R16G16B16A16_TYPELESS,  DXGI_FORMAT_R16G16B16A16_FLOAT,			DXGI_FORMAT_R16G16B16A16_FLOAT		},
		DXGIFormatMapping { RHIFormat::RGBA16_UNORM,			DXGI_FORMAT_R16G16B16A16_TYPELESS,  DXGI_FORMAT_R16G16B16A16_UNORM,			DXGI_FORMAT_R16G16B16A16_UNORM		},
		DXGIFormatMapping { RHIFormat::RGBA16_SNORM,			DXGI_FORMAT_R16G16B16A16_TYPELESS,  DXGI_FORMAT_R16G16B16A16_SNORM,			DXGI_FORMAT_R16G16B16A16_SNORM		},
		DXGIFormatMapping { RHIFormat::RG32_UINT,				DXGI_FORMAT_R32G32_TYPELESS,		DXGI_FORMAT_R32G32_UINT,				DXGI_FORMAT_R32G32_UINT				},
		DXGIFormatMapping { RHIFormat::RG32_SINT,				DXGI_FORMAT_R32G32_TYPELESS,		DXGI_FORMAT_R32G32_SINT,				DXGI_FORMAT_R32G32_SINT				},
		DXGIFormatMapping { RHIFormat::RG32_FLOAT,				DXGI_FORMAT_R32G32_TYPELESS,		DXGI_FORMAT_R32G32_FLOAT,				DXGI_FORMAT_R32G32_FLOAT			},
		DXGIFormatMapping { RHIFormat::RGB32_UINT,				DXGI_FORMAT_R32G32B32_TYPELESS,		DXGI_FORMAT_R32G32B32_UINT,				DXGI_FORMAT_R32G32B32_UINT			},
		DXGIFormatMapping { RHIFormat::RGB32_SINT,				DXGI_FORMAT_R32G32B32_TYPELESS,		DXGI_FORMAT_R32G32B32_SINT,				DXGI_FORMAT_R32G32B32_SINT			},
		DXGIFormatMapping { RHIFormat::RGB32_FLOAT,				DXGI_FORMAT_R32G32B32_TYPELESS,		DXGI_FORMAT_R32G32B32_FLOAT,			DXGI_FORMAT_R32G32B32_FLOAT			},
		DXGIFormatMapping { RHIFormat::RGBA32_UINT,				DXGI_FORMAT_R32G32B32A32_TYPELESS,  DXGI_FORMAT_R32G32B32A32_UINT,			DXGI_FORMAT_R32G32B32A32_UINT		},
		DXGIFormatMapping { RHIFormat::RGBA32_SINT,				DXGI_FORMAT_R32G32B32A32_TYPELESS,  DXGI_FORMAT_R32G32B32A32_SINT,			DXGI_FORMAT_R32G32B32A32_SINT		},
		DXGIFormatMapping { RHIFormat::RGBA32_FLOAT,			DXGI_FORMAT_R32G32B32A32_TYPELESS,  DXGI_FORMAT_R32G32B32A32_FLOAT,			DXGI_FORMAT_R32G32B32A32_FLOAT		},

		DXGIFormatMapping { RHIFormat::D16,						DXGI_FORMAT_R16_TYPELESS,			DXGI_FORMAT_R16_UNORM,					DXGI_FORMAT_D16_UNORM				},
		DXGIFormatMapping { RHIFormat::D24S8,					DXGI_FORMAT_R24G8_TYPELESS,			DXGI_FORMAT_R24_UNORM_X8_TYPELESS,		DXGI_FORMAT_D24_UNORM_S8_UINT		},
		DXGIFormatMapping { RHIFormat::X24G8_UINT,				DXGI_FORMAT_R24G8_TYPELESS,			DXGI_FORMAT_X24_TYPELESS_G8_UINT,		DXGI_FORMAT_D24_UNORM_S8_UINT		},
		DXGIFormatMapping { RHIFormat::D32,						DXGI_FORMAT_R32_TYPELESS,			DXGI_FORMAT_R32_FLOAT,					DXGI_FORMAT_D32_FLOAT				},
		DXGIFormatMapping { RHIFormat::D32S8,					DXGI_FORMAT_R32G8X24_TYPELESS,		DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS,	DXGI_FORMAT_D32_FLOAT_S8X24_UINT	},
		DXGIFormatMapping { RHIFormat::X32G8_UINT,				DXGI_FORMAT_R32G8X24_TYPELESS,		DXGI_FORMAT_X32_TYPELESS_G8X24_UINT,	DXGI_FORMAT_D32_FLOAT_S8X24_UINT	},

		DXGIFormatMapping { RHIFormat::BC1_UNORM,				DXGI_FORMAT_BC1_TYPELESS,			DXGI_FORMAT_BC1_UNORM,					DXGI_FORMAT_BC1_UNORM				},
		DXGIFormatMapping { RHIFormat::BC1_UNORM_SRGB,			DXGI_FORMAT_BC1_TYPELESS,			DXGI_FORMAT_BC1_UNORM_SRGB,				DXGI_FORMAT_BC1_UNORM_SRGB			},
		DXGIFormatMapping { RHIFormat::BC2_UNORM,				DXGI_FORMAT_BC2_TYPELESS,			DXGI_FORMAT_BC2_UNORM,					DXGI_FORMAT_BC2_UNORM				},
		DXGIFormatMapping { RHIFormat::BC2_UNORM_SRGB,			DXGI_FORMAT_BC2_TYPELESS,			DXGI_FORMAT_BC2_UNORM_SRGB,				DXGI_FORMAT_BC2_UNORM_SRGB			},
		DXGIFormatMapping { RHIFormat::BC3_UNORM,				DXGI_FORMAT_BC3_TYPELESS,			DXGI_FORMAT_BC3_UNORM,					DXGI_FORMAT_BC3_UNORM				},
		DXGIFormatMapping { RHIFormat::BC3_UNORM_SRGB,			DXGI_FORMAT_BC3_TYPELESS,			DXGI_FORMAT_BC3_UNORM_SRGB,				DXGI_FORMAT_BC3_UNORM_SRGB			},
		DXGIFormatMapping { RHIFormat::BC4_UNORM,				DXGI_FORMAT_BC4_TYPELESS,			DXGI_FORMAT_BC4_UNORM,					DXGI_FORMAT_BC4_UNORM				},
		DXGIFormatMapping { RHIFormat::BC4_SNORM,				DXGI_FORMAT_BC4_TYPELESS,			DXGI_FORMAT_BC4_SNORM,					DXGI_FORMAT_BC4_SNORM				},
		DXGIFormatMapping { RHIFormat::BC5_UNORM,				DXGI_FORMAT_BC5_TYPELESS,			DXGI_FORMAT_BC5_UNORM,					DXGI_FORMAT_BC5_UNORM				},
		DXGIFormatMapping { RHIFormat::BC5_SNORM,				DXGI_FORMAT_BC5_TYPELESS,			DXGI_FORMAT_BC5_SNORM,					DXGI_FORMAT_BC5_SNORM				},
		DXGIFormatMapping { RHIFormat::BC6H_UFLOAT,				DXGI_FORMAT_BC6H_TYPELESS,			DXGI_FORMAT_BC6H_UF16,					DXGI_FORMAT_BC6H_UF16				},
		DXGIFormatMapping { RHIFormat::BC6H_SFLOAT,				DXGI_FORMAT_BC6H_TYPELESS,			DXGI_FORMAT_BC6H_SF16,					DXGI_FORMAT_BC6H_SF16				},
		DXGIFormatMapping { RHIFormat::BC7_UNORM,				DXGI_FORMAT_BC7_TYPELESS,			DXGI_FORMAT_BC7_UNORM,					DXGI_FORMAT_BC7_UNORM				},
		DXGIFormatMapping { RHIFormat::BC7_UNORM_SRGB,			DXGI_FORMAT_BC7_TYPELESS,			DXGI_FORMAT_BC7_UNORM_SRGB,				DXGI_FORMAT_BC7_UNORM_SRGB			}
	};

	PARTING_EXPORT constexpr const DXGIFormatMapping& Get_DXGIFormatMapping(RHIFormat format)noexcept {
		ASSERT(format < RHIFormat::COUNT);
		return g_DXGIFormatMappings[static_cast<Uint32>(format)];
	}

	DXGI_FORMAT ConvertFormat(RHIFormat format) { return Get_DXGIFormatMapping(format).SRVFormat; }
}