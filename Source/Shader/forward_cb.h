#ifndef FORWARD_CB_H
#define FORWARD_CB_H

#include "light_cb.h"
#include "view_cb.h"

//TODO to constexpr

#define FORWARD_MAX_LIGHTS 16
#define FORWARD_MAX_SHADOWS 16
#define FORWARD_MAX_LIGHT_PROBES 16

#define FORWARD_SPACE_MATERIAL 0
#define FORWARD_BINDING_MATERIAL_CONSTANTS 0
#define FORWARD_BINDING_MATERIAL_DIFFUSE_TEXTURE 0
#define FORWARD_BINDING_MATERIAL_SPECULAR_TEXTURE 1
#define FORWARD_BINDING_MATERIAL_NORMAL_TEXTURE 2
#define FORWARD_BINDING_MATERIAL_EMISSIVE_TEXTURE 3
#define FORWARD_BINDING_MATERIAL_OCCLUSION_TEXTURE 4
#define FORWARD_BINDING_MATERIAL_TRANSMISSION_TEXTURE 5
#define FORWARD_BINDING_MATERIAL_OPACITY_TEXTURE 6

#define FORWARD_SPACE_INPUT 1
#define FORWARD_BINDING_PUSH_CONSTANTS 1
#define FORWARD_BINDING_INSTANCE_BUFFER 10
#define FORWARD_BINDING_VERTEX_BUFFER 11

#define FORWARD_SPACE_VIEW 2
#define FORWARD_BINDING_VIEW_CONSTANTS 2

#define FORWARD_SPACE_SHADING 3
#define FORWARD_BINDING_LIGHT_CONSTANTS 3
#define FORWARD_BINDING_SHADOW_MAP_TEXTURE 20
#define FORWARD_BINDING_DIFFUSE_LIGHT_PROBE_TEXTURE 21
#define FORWARD_BINDING_SPECULAR_LIGHT_PROBE_TEXTURE 22
#define FORWARD_BINDING_ENVIRONMENT_BRDF_TEXTURE 23
#define FORWARD_BINDING_MATERIAL_SAMPLER 0
#define FORWARD_BINDING_SHADOW_MAP_SAMPLER 1
#define FORWARD_BINDING_LIGHT_PROBE_SAMPLER 2
#define FORWARD_BINDING_ENVIRONMENT_BRDF_SAMPLER 3


struct ForwardShadingViewConstants {
	PlanarViewConstants		View;
};

struct ForwardShadingLightConstants {
	Math::VecF2				ShadowMapTextureSize;
	Math::VecF2				ShadowMapTextureSizeInv;
	Math::VecF4				AmbientColorTop;
	Math::VecF4				AmbientColorBottom;

	Math::VecU2				Padding;
	Uint32					NumLights;
	Uint32					NumLightProbes;

	LightConstants			Lights[FORWARD_MAX_LIGHTS];
	ShadowConstants			Shadows[FORWARD_MAX_SHADOWS];
	LightProbeConstants		LightProbes[FORWARD_MAX_LIGHT_PROBES];
};

struct ForwardPushConstants {
	Uint32					StartInstanceLocation;
	Uint32					StartVertexLocation;
	Uint32					PositionOffset;
	Uint32					TexCoordOffset;
	Uint32					NormalOffset;
	Uint32					TangentOffset;
};

#endif // FORWARD_CB_H